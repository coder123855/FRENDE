name: Backend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'FRENDE/backend/**'
      - '.github/workflows/backend-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'FRENDE/backend/**'
      - '.github/workflows/backend-tests.yml'

jobs:
  test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_frende
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('FRENDE/backend/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          
    - name: Install dependencies
      working-directory: FRENDE/backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        
    - name: Run linting
      working-directory: FRENDE/backend
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        black --check .
        isort --check-only .
        
    - name: Run type checking
      working-directory: FRENDE/backend
      run: mypy .
      
    - name: Run unit tests
      working-directory: FRENDE/backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_frende
        REDIS_URL: redis://localhost:6379
        JWT_SECRET_KEY: test-secret-key
        ENVIRONMENT: test
      run: |
        pytest tests/unit/ -v --cov=. --cov-report=xml --cov-report=html --cov-report=term-missing
        
    - name: Run integration tests
      working-directory: FRENDE/backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_frende
        REDIS_URL: redis://localhost:6379
        JWT_SECRET_KEY: test-secret-key
        ENVIRONMENT: test
      run: |
        pytest tests/integration/ -v --cov=. --cov-append --cov-report=xml --cov-report=html --cov-report=term-missing
        
    - name: Run API tests
      working-directory: FRENDE/backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_frende
        REDIS_URL: redis://localhost:6379
        JWT_SECRET_KEY: test-secret-key
        ENVIRONMENT: test
      run: |
        pytest tests/test_api/ -v --cov=. --cov-append --cov-report=xml --cov-report=html --cov-report=term-missing
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: FRENDE/backend/coverage.xml
        flags: backend
        name: backend-coverage
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: backend-test-results-${{ matrix.python-version }}
        path: |
          FRENDE/backend/coverage.xml
          FRENDE/backend/htmlcov/
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install security tools
      working-directory: FRENDE/backend
      run: |
        pip install bandit safety semgrep
        
    - name: Run security scan
      working-directory: FRENDE/backend
      run: |
        bandit -r . -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          FRENDE/backend/bandit-report.json
          FRENDE/backend/safety-report.json
        retention-days: 30
