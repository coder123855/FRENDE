# Frende Backend Environment Variables
# Copy this file to .env and update the values for your environment

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
# Environment: development, staging, production
ENVIRONMENT=development

# Debug mode (set to false in production)
DEBUG=true

# Server host and port
HOST=0.0.0.0
PORT=8000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Database URL (use PostgreSQL in production)
# Development: sqlite:///./frende.db
# Production: postgresql://username:password@host:port/database?sslmode=require
DATABASE_URL=sqlite:///./frende.db

# Database connection pool settings
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20
DATABASE_POOL_TIMEOUT=30

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT Configuration
# IMPORTANT: Change this in production! Use secrets manager to generate secure keys
JWT_SECRET_KEY=your-secret-key-change-in-production
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440
REFRESH_TOKEN_EXPIRE_DAYS=30

# Security Features
TOKEN_ROTATION_ENABLED=true
MAX_ACTIVE_SESSIONS=5
TOKEN_FINGERPRINT_ENABLED=true
BCRYPT_ROUNDS=12

# CORS Configuration
# Development: Allow localhost origins
# Production: Only allow your domain
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:5173
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOW_HEADERS=*
CORS_MAX_AGE=86400

# Security Headers
SECURITY_HEADERS_ENABLED=true
CSP_ENABLED=true
HSTS_ENABLED=true
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=false

# Rate Limiting
RATE_LIMITING_ENABLED=true
RATE_LIMIT_DEFAULT=100
RATE_LIMIT_AUTH=5
RATE_LIMIT_UPLOAD=10
RATE_LIMIT_WEBSOCKET=10

# Redis Configuration (for rate limiting)
REDIS_URL=redis://localhost:6379
REDIS_ENABLED=false
REDIS_POOL_SIZE=10
REDIS_POOL_TIMEOUT=30
REDIS_RETRY_ON_TIMEOUT=true

# Compression Configuration
COMPRESSION_ENABLED=true
COMPRESSION_MIN_SIZE=1024
COMPRESSION_LEVEL=6
BROTLI_ENABLED=true
BROTLI_QUALITY=11

# CDN Configuration
CDN_ENABLED=true
CDN_DOMAIN=
CDN_CACHE_DURATION=31536000
CDN_GEO_DISTRIBUTION=true

# Asset Optimization Configuration
ASSET_OPTIMIZATION_ENABLED=true
IMAGE_QUALITY=80
FONT_SUBSETTING=true
WEBP_ENABLED=true
AVIF_ENABLED=false

# Request Size Limits
REQUEST_SIZE_LIMIT=10MB
UPLOAD_SIZE_LIMIT=30MB

# Security Monitoring
SECURITY_LOG_LEVEL=WARNING
SECURITY_MONITORING_ENABLED=true

# =============================================================================
# AI SERVICES CONFIGURATION
# =============================================================================
# Gemini AI Configuration
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here
GEMINI_API_URL=https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent
AI_RATE_LIMIT_PER_MINUTE=60
AI_MAX_TOKENS_PER_REQUEST=1000

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Logging Level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log Format: json or text
LOG_FORMAT=json

# Log File (optional, leave empty for console only)
LOG_FILE_PATH=

# Log Rotation
LOG_ROTATION_SIZE=10MB
LOG_ROTATION_COUNT=5
LOG_RETENTION_DAYS=30

# Performance Monitoring
PERFORMANCE_MONITORING_ENABLED=true
SLOW_QUERY_THRESHOLD_MS=1000
API_RESPONSE_TIME_THRESHOLD_MS=5000

# Error Handling
ERROR_DETAILS_IN_PRODUCTION=false
ERROR_LOG_LEVEL=ERROR
ERROR_NOTIFICATION_ENABLED=false

# Request Tracking
REQUEST_ID_ENABLED=true
REQUEST_ID_HEADER=X-Request-ID

# Performance Headers
PERFORMANCE_HEADERS_ENABLED=true
RESPONSE_TIME_HEADER=X-Response-Time
PROCESSING_TIME_HEADER=X-Processing-Time

# =============================================================================
# BUSINESS LOGIC CONFIGURATION
# =============================================================================
# Slot System
SLOT_PURCHASE_COST=50
DEFAULT_USER_SLOTS=2

# Matching System
MIN_COMPATIBILITY_THRESHOLD=50
MAX_COMPATIBILITY_SCORE=100
MATCH_EXPIRATION_HOURS=48

# Task System
TASK_EXPIRATION_HOURS=24
MAX_TASKS_PER_MATCH=5

# Chat System
AUTO_GREETING_TIMEOUT_SECONDS=60
CHAT_MESSAGE_MAX_LENGTH=2000

# Profile System
PROFILE_TEXT_MAX_LENGTH=500

# Coin System
COINS_PER_TASK=10
COINS_PER_SLOT=50

# =============================================================================
# EXTERNAL SERVICES CONFIGURATION
# =============================================================================
# Email Service (optional)
EMAIL_SERVICE_URL=
EMAIL_API_KEY=

# File Storage Service (optional)
FILE_STORAGE_URL=
FILE_STORAGE_API_KEY=

# Monitoring Service (optional)
MONITORING_API_KEY=

# Error Tracking (optional)
SENTRY_DSN=
SENTRY_DEBUG_ENABLED=false
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_PROFILES_SAMPLE_RATE=0.1

# Backup and Disaster Recovery
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_ENCRYPTION_KEY=your-backup-encryption-key

# Database Backup
DB_BACKUP_ENABLED=true
DB_BACKUP_S3_BUCKET=frende-db-backups
DB_BACKUP_S3_REGION=us-east-1
DB_BACKUP_COMPRESSION=true

# File Backup
FILE_BACKUP_ENABLED=true
FILE_BACKUP_S3_BUCKET=frende-file-backups
FILE_BACKUP_INCLUDE_PATTERNS=*.jpg,*.png,*.pdf
FILE_BACKUP_EXCLUDE_PATTERNS=*.tmp,*.log

# Redis Backup
REDIS_BACKUP_ENABLED=true
REDIS_BACKUP_S3_BUCKET=frende-redis-backups
REDIS_PERSISTENCE_ENABLED=true

# Recovery
RECOVERY_AUTO_FAILOVER=false
RECOVERY_NOTIFICATION_EMAIL=admin@frende.com
RECOVERY_NOTIFICATION_SLACK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Backup Monitoring
BACKUP_MONITORING_ENABLED=true
BACKUP_MONITORING_INTERVAL=300
BACKUP_HEALTH_CHECK_URL=https://api.frende.com/health/backup

# =============================================================================
# WEBSOCKET CONFIGURATION
# =============================================================================
WEBSOCKET_PING_INTERVAL=25
WEBSOCKET_PING_TIMEOUT=10

# =============================================================================
# SECRETS MANAGEMENT CONFIGURATION
# =============================================================================
# Secrets Manager
SECRETS_MANAGER_ENABLED=true
SECRETS_MASTER_KEY=
SECRETS_BACKUP_ENABLED=true
SECRETS_ROTATION_ENABLED=true

# =============================================================================
# PRODUCTION-SPECIFIC SETTINGS
# =============================================================================
# These settings should be configured for production environments

# Database (Production)
# DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require

# Security (Production)
# JWT_SECRET_KEY=use-secrets-manager-to-generate-secure-key
# CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# Logging (Production)
# LOG_LEVEL=WARNING
# LOG_FORMAT=json
# LOG_FILE_PATH=/var/log/frende/app.log

# Monitoring (Production)
# ERROR_NOTIFICATION_ENABLED=true
# SENTRY_DSN=https://your-sentry-dsn

# =============================================================================
# DEVELOPMENT-SPECIFIC SETTINGS
# =============================================================================
# These settings are optimized for development

# Database (Development)
# DATABASE_URL=sqlite:///./frende.db

# Security (Development)
# DEBUG=true
# CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Logging (Development)
# LOG_LEVEL=DEBUG
# LOG_FORMAT=text

# =============================================================================
# NOTES
# =============================================================================
# 1. Never commit .env files to version control
# 2. Use secrets manager for production secrets
# 3. Rotate secrets regularly in production
# 4. Use strong, unique passwords for all services
# 5. Enable SSL/TLS in production
# 6. Configure proper CORS origins for production
# 7. Set up monitoring and alerting
# 8. Regular backups of secrets and database
# 9. Use environment-specific configurations
# 10. Validate all environment variables on startup

# =============================================================================
# SECRETS MANAGEMENT COMMANDS
# =============================================================================
# Generate a new JWT secret:
# python scripts/manage_secrets.py generate jwt

# Generate a new API key:
# python scripts/manage_secrets.py generate api

# Store a secret:
# python scripts/manage_secrets.py store JWT_SECRET_KEY "your-secret-value"

# Rotate a secret:
# python scripts/manage_secrets.py rotate JWT_SECRET_KEY

# List all secrets:
# python scripts/manage_secrets.py list

# Backup secrets:
# python scripts/manage_secrets.py backup

# Restore secrets:
# python scripts/manage_secrets.py restore /path/to/backup.json

# Set up production secrets:
# python scripts/manage_secrets.py setup

# Validate a secret:
# python scripts/manage_secrets.py validate JWT_SECRET_KEY "your-secret-value"

# Clean up old backups:
# python scripts/manage_secrets.py cleanup --days 30 
COINS_PER_SLOT=50 